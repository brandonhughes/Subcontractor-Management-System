AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for Subcontractor Management System frontend deployment to S3 and CloudFront'

Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket to store the frontend assets
    Default: subcontractor-management-system-frontend
  
  ApiGatewayUrl:
    Type: String
    Description: URL of the API Gateway endpoint (without https://)
    Default: api.example.com

  Environment:
    Type: String
    Description: Deployment environment
    Default: production
    AllowedValues:
      - development
      - staging
      - production

Resources:
  # S3 bucket for static website hosting
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET]
            AllowedOrigins: ['*']
            MaxAge: 3000
      VersioningConfiguration:
        Status: Enabled

  # Bucket policy to allow CloudFront to access the S3 bucket
  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${FrontendBucket}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

  # CloudFront distribution to serve the frontend
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        PriceClass: PriceClass_100 # Use only North America and Europe
        HttpVersion: http2
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt FrontendBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # Managed-CORS-S3Origin
        CustomErrorResponses:
          - ErrorCode: 403 # Access Denied
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404 # Not Found
            ResponseCode: 200
            ResponsePagePath: /index.html

  # CloudFront Origin Access Control for S3
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${BucketName}-OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

Outputs:
  S3BucketName:
    Description: Name of the S3 bucket
    Value: !Ref FrontendBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3BucketName"

  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDistributionId"

  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-CloudFrontDomainName"

  WebsiteURL:
    Description: URL of the website
    Value: !Sub "https://${CloudFrontDistribution.DomainName}"
    Export:
      Name: !Sub "${AWS::StackName}-WebsiteURL"